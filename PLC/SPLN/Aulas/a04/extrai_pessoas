#!/usr/bin/python3

import json
from jjcli import *
c=clfilter(opt="do:")

for pg in c.slurp(): # process one striped text at time)

  dic = {}
  # Versão Inicial:
    # nome = findall(r'<title>([\w \-]+)</title>', pg) # Buscar o nome que está dentro da tag <title>
    # print("NOME: ",*nome) # Para não imprimir em forma de lista

    # familiares = findall(r'<a\s+href=(.*?id=(\d+)\"?)>(.*?)</a>',pg) # Aqui são capturados 3 grupos
    # print("FAMILIARES: ")
    # for url,_id,nome in familiares:
      # print(f'\t==> {_id} → {nome.strip()}')

  dicJSON = {}
  nascimentoJSON={}
  falecimentoJSON={}
  paisJSON={}
  casamentosJSON={}
  filhosJSON={}
  notasJSON={}

  # Verificação de tags
  tags = ['Filhos','Casamentos','Pais','Notas']

  # p1 vai ser igual a tudo até ao primeiro <div class="marcadorP">.
  p1, *sec_cont =split(r'<div\s+class="marcadorP".*?>(.*?)</div>',pg)
  # O split como tem parênteses, captura não só split mas como a ER definida entre parênteses.

  info = split(r'<div align=\"center\">[^\n]',p1)
  # print(info[1])
  info = split(r'</?nobr>',info[1])
  # ignore last </div>
  info = info[:-1]

  # Tratamento das datas
  for i in info:
    if '*' in i:
      s = "Nascimento:" + i.replace('*','') + "- " + info[info.index(i)+1]
      nascimentoJSON["local"] = i.replace('*','').strip()
      nascimentoJSON["dia"] = info[info.index(i)+1].strip()
      # print(s.replace(r'\s+','\s'))
    if '+' in i:
      s = "Falecimento:" + i.replace('+','') + "- " + info[info.index(i)+1]
      falecimentoJSON["local"] = i.replace('+','').strip()
      falecimentoJSON["dia"] = info[info.index(i)+1].strip()
      # print(s.replace(r'\s+','\s'))

  dicJSON["Nascimento"]  = nascimentoJSON
  dicJSON["Falecimento"] = falecimentoJSON

  nome = findall(r'<title>([\w \-]+)</title>', p1)
  print("NOME:\n\t",*nome)

  dicJSON["nome"] = nome[0]
  #dicJSON["id"] = id

  lastTag = ''
  lastTitle = ''

  for sec in sec_cont:
    if sec in tags:
      tit=sec
      lastTag = ''
      dic[tit] = []
    else:
      # tag = findall(r'<b>(.*?)</b>', sec)
      familiares = findall(r'(<b>(.*?)</b>\s*([^\<]+)?\s*(<nobr>(.*?)</nobr>)?.*?)?<a\s+href=(.*?id=(\d+)"?)>(.*?)</a>', sec)

      if tit == "Notas":
          notas = findall(r'<li>([^<][^/]+)</li>',sec)
          notasJSON = notas
          dicJSON["Notas"] = notasJSON

      for ignore,tag,localC,ignoreData,dataC,url,id,nome in familiares:
        # o ignore vai ser ignorado, tal como o ignoreData.

        if tag == '':
          if lastTag != '':
            tag = lastTag
        else:
          lastTag = tag

        if "<a" in tag:
          _id = findall(r'id=(\d+)',tag)
          tag = re.split('</?a.*?>', tag)
          tag = tag[0] + tag[1] + " (" + _id[0] + '):'
        # o ignore vai ser ignorado.

        if tit == 'Casamentos':
          if tag == '':
            w = f"\tParceiro: {nome.strip()} ({id})\n\tLocal - Data: {localC} - {dataC}"
            casamentosJSON["parceiro"] = nome.strip()
            casamentosJSON["id_parceiro"] = id
            casamentosJSON["local"] = localC.strip()
            casamentosJSON["data"] = dataC.strip()
          else:
            w = f"\t{tag}\n\tParceiro: {nome.strip()} ({id})\n\tLocal - Data: {localC} - {dataC}"
            tagJSON = {}
            tagJSON["parceiro"] = nome.strip()
            tagJSON["id_parceiro"] = id
            tagJSON["local"] = localC.strip()
            tagJSON["data"] = dataC.strip()
            casamentosJSON[tag[:-1]] = tagJSON
        else:
          if tag == '':
            w = f"\t{nome.strip()} ({id})"
            if tit == "Pais":
              paisJSON["nome"] = nome.strip()
              paisJSON["id"] = id
            elif tit == "Filhos":
              filhosJSON["nome"] = nome.strip()
              filhosJSON["id"] = id
          else:
            w = f"\t{tag}\n\t{nome.strip()} ({id})"
            if tit == "Pais":
              tagJSON = {}
              tagJSON["id"] = id
              tagJSON["nome"] = nome.strip()
              paisJSON[tag[:-1]] = tagJSON

            elif tit == "Filhos":
              tagJSON = {}
              tagJSON["id"] = id
              tagJSON["nome"] = nome.strip()
              filhosJSON[tag[:-1]] = tagJSON

        dicJSON["Casamentos"] = casamentosJSON
        dicJSON["Filhos"] = filhosJSON
        dicJSON["Pais"] = paisJSON
        dic[tit].append(w)
  for t in dic:
    print(f"{t.upper()}:")
    for i in dic[t]:
      print(f"{i}")
  # ==> Ir buscar todos!!!!
  # ===> import requests -→ pg = reguests.get(URL)
  print(json.dumps(dicJSON, indent=4, ensure_ascii=False, sort_keys=False))
  # \w = [a-zA-Z0-9_áéíó...]
  # (...) -→ captura
  # *?
